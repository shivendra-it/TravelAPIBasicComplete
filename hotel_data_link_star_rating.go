package main

import	(
	"encoding/json"
//	"fmt"
	"github.com/jmcvetta/neoism"
)

func InsertHotelData(jsonbody []byte){
  dil := AutoGenerated{}
	json.Unmarshal([]byte(jsonbody), &dil)

  n0,_ := db.NodesByLabel("facilities")
  n2,_ := db.NodesByLabel("hotel_type")
  n1,_ := db.NodesByLabel("HotelInfo")

for i := range dil.ServiceResponse.Hotel.HotelList{



  for key := range dil.ServiceResponse.Hotel.HotelList[i].Facilities{
//  fmt.Println(dil.ServiceResponse.Hotel.HotelList[i].Facilities[key])
  s := dil.ServiceResponse.Hotel.HotelList[i].Facilities[key]
  switch s {
  case "Front desk":
      n1[i].Relate("has_amenities", n0[0].Id(), neoism.Props{})
  case "Room Service":
      n1[i].Relate("has_amenities", n0[1].Id(), neoism.Props{})
  case "Laundry Service":
      n1[i].Relate("has_amenities", n0[2].Id(), neoism.Props{})
  case "Restaurant/Coffee Shop":
      n1[i].Relate("has_amenities", n0[3].Id(), neoism.Props{})
  case "Business Services":
      n1[i].Relate("has_amenities", n0[4].Id(), neoism.Props{})
  case "Health-Spa":
        n1[i].Relate("has_amenities", n0[5].Id(), neoism.Props{})
  case "Swimming Pool":
        n1[i].Relate("has_amenities", n0[6].Id(), neoism.Props{})
  case "Parking Facility":
        n1[i].Relate("has_amenities", n0[7].Id(), neoism.Props{})
  case "Internet":
        n1[i].Relate("has_amenities", n0[8].Id(), neoism.Props{})
  case "Spa":
        n1[i].Relate("has_amenities", n0[9].Id(), neoism.Props{})
  case "Travel Assistance":
        n1[i].Relate("has_amenities", n0[10].Id(), neoism.Props{})
  }

}

  for key2 := range dil.ServiceResponse.Hotel.HotelList[i].HotelType{
  s1 := dil.ServiceResponse.Hotel.HotelList[i].HotelType[key2]
  switch s1 {
  case "Villa":
      n1[i].Relate("has_type", n2[0].Id(), neoism.Props{})
  case "Palace":
      n1[i].Relate("has_type", n2[1].Id(), neoism.Props{})
  case "Guest House":
      n1[i].Relate("has_type", n2[2].Id(), neoism.Props{})
  case "Motel":
      n1[i].Relate("has_type", n2[3].Id(), neoism.Props{})
  case "Hotel":
      n1[i].Relate("has_type", n2[4].Id(), neoism.Props{})
  case "Resort":
        n1[i].Relate("has_type", n2[5].Id(), neoism.Props{})
  case "Bungalow":
        n1[i].Relate("has_type", n2[6].Id(), neoism.Props{})
  case "Service Apartment":
        n1[i].Relate("has_type", n2[7].Id(), neoism.Props{})
  case "Lodge":
        n1[i].Relate("has_type", n2[8].Id(), neoism.Props{})
  case "BnB":
        n1[i].Relate("has_type", n2[9].Id(), neoism.Props{})
  case "Hostel":
        n1[i].Relate("has_type", n2[10].Id(), neoism.Props{})
  }

}
}


}


/*

{type: Villa}            │
├─────────────────────────┤
│{type: Palace}           │
├─────────────────────────┤
│{type: Guest House}      │
├─────────────────────────┤
│{type: Motel}            │
├─────────────────────────┤
│{type: Hotel}            │
├─────────────────────────┤
│{type: Resort}           │
├─────────────────────────┤
│{type: Bungalow}         │
├─────────────────────────┤
│{type: Service Apartment}│
├─────────────────────────┤
│{type: Lodge}            │
├─────────────────────────┤
│{type: BnB}              │
├─────────────────────────┤
│{type: Hostel}           │
└─────────────────────────┘

╒══════════════════════════════╕
│n                             │
╞══════════════════════════════╡
│{facility: Front desk}        │
├──────────────────────────────┤
│{facility: Room Service}      │
├──────────────────────────────┤
│{facility: Laundry Service}   │
├──────────────────────────────┤
│{facility: Restaurant/Coffee S│
│hop}                          │
├──────────────────────────────┤
│{facility: Business Services} │
├──────────────────────────────┤
│{facility: Health-Spa}        │
├──────────────────────────────┤
│{facility: Swimming Pool}     │
├──────────────────────────────┤
│{facility: Parking Facility}  │
├──────────────────────────────┤
│{facility: Internet}          │
├──────────────────────────────┤
│{facility: Spa}               │
├──────────────────────────────┤
│{facility: Travel Assistance} │
└──────────────────────────────┘

*/

/*
  for i := range dil.ServiceResponse.Hotel.HotelList{
  s := dil.ServiceResponse.Hotel.HotelList[i].Rating
  switch s {
  case "1":
      n1[i].Relate("has_rating", n0[0].Id(), neoism.Props{})
  case "2":
      n1[i].Relate("has_rating", n0[1].Id(), neoism.Props{})
  case "3":
      n1[i].Relate("has_rating", n0[2].Id(), neoism.Props{})
  case "4":
      n1[i].Relate("has_rating", n0[3].Id(), neoism.Props{})
  case "5":
      n1[i].Relate("has_rating", n0[4].Id(), neoism.Props{})
  }

*/







/*
// INSERT Ammenties


for i := range dil.ServiceResponse.Hotel.HotelList{
s1 := dil.ServiceResponse.Hotel.MetaData.HotelType[i].Type


n, err := db.CreateNode(neoism.Props{"type": s1})
if err != nil {
  panic(err)
}
n.AddLabel("hotel_type")



s2 := dil.ServiceResponse.Hotel.MetaData.Amenities[i].Aminity
n1, err := db.CreateNode(neoism.Props{"aminity": s1})
if err != nil {
  panic(err)
}
n1.AddLabel("amenities")

}

*/


/*  RATING INSERT

n0,_ := db.NodesByLabel("Rating")
n1,_ := db.NodesByLabel("HotelInfo")
//  fmt.Println(n1[0].Data["hotel_name"])

for i := range dil.ServiceResponse.Hotel.HotelList{
s := dil.ServiceResponse.Hotel.HotelList[i].Rating
switch s {
case "1":
    n1[i].Relate("has_rating", n0[0].Id(), neoism.Props{})
case "2":
    n1[i].Relate("has_rating", n0[1].Id(), neoism.Props{})
case "3":
    n1[i].Relate("has_rating", n0[2].Id(), neoism.Props{})
case "4":
    n1[i].Relate("has_rating", n0[3].Id(), neoism.Props{})
case "5":
    n1[i].Relate("has_rating", n0[4].Id(), neoism.Props{})
}

}
*/
