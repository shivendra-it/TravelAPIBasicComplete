package main
import (
	"encoding/json"
	"github.com/jmcvetta/neoism"
	"fmt"
)

type AutoGenerated1 struct{
	Service string `json:"_service"`
	Version string `json:"_version"`
	ServiceResponse struct {
		ResponseInfo struct {
			HostCode string `json:"host_code"`
			HostDescription string `json:"host_description"`
		} `json:"response_info"`
		TransactionInfo struct {
			TimeStamp string `json:"time_stamp"`
			RequestID string `json:"request_id"`
			TransactionNo string `json:"transaction_no"`
		} `json:"transaction_info"`
		User struct {
			Mdn string `json:"mdn"`
		} `json:"user"`
		Cities []struct {
			ID string `json:"id"`
			Name string `json:"name"`
			CountryCode string `json:"country_code"`
			CountryName string `json:"country_name"`
		} `json:"cities"`
		PartnerInfo []struct {
			Code string `json:"code"`
			Name string `json:"name"`
		} `json:"partner_info"`
		Params struct {
			Param1 string `json:"param1"`
			Param2 string `json:"param2"`
			Param3 string `json:"param3"`
			Param4 string `json:"param4"`
			Param5 string `json:"param5"`
		} `json:"params"`
	} `json:"service_response"`
}


func city_data_insert(jsonbody []byte){
	dil := AutoGenerated1{}
	json.Unmarshal([]byte(jsonbody), &dil)
	for i := range dil.ServiceResponse.Cities {
	s1:=dil.ServiceResponse.Cities[i].ID
	s2:=dil.ServiceResponse.Cities[i].Name
	var n *neoism.Node
	n = createCityNode(s1,s2)
	fmt.Println(n)
	}
}
